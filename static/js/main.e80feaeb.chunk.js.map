{"version":3,"sources":["components/shared-components/Loading/index.js","redux/actions/Fetch.js","components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Fetch.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/Fetch.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","redux/constants/Fetch.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","fetchUsersRequest","type","FETCH_USERS_REQUEST","fetchUsersSuccess","users","FETCH_USERS_SUCCESS","payload","fetchUsersFailure","error","FETCH_USERS_FAILURE","fetchUsers","FETCH_USERS","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","fetchReducer","reducers","combineReducers","Theme","Auth","fetch","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","fetchUsersWatcher","fetchUsersApi","axios","get","res","data","getState","Fetch","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","TeamOutlined","MailOutlined","systemNavTree","SettingOutlined","MobileOutlined","FileTextOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","filter","item","input","searchText","screens","breakpoints","push","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","status","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"kGAAA,iCAKMA,EAAO,cAAC,IAAe,CAACC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAErDC,EAAU,SAACC,GAChB,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACf,OACC,qBAAKC,UAAS,uBAAkBF,EAAK,kBAAUC,GAAQ,SACtD,cAAC,IAAI,CAACE,UAAWT,KAGpB,EAOAI,EAAQM,aAAe,CACtBJ,MAAO,SACPC,MAAO,UAGOH,K,mCC1Bf,oJASO,SAASO,IACZ,MAAO,CACHC,KAAOC,IAEf,CAEO,SAASC,EAAkBC,GAC9B,MAAO,CACHH,KAAOI,IACPC,QAAUF,EAElB,CAEO,SAASG,EAAkBC,GAC9B,MAAO,CACHP,KAAOQ,IACPH,QAAUE,EAElB,CAEO,SAASE,IACZ,MAAO,CACHT,KAAOU,IAEf,C,mCCjCA,gBAGMC,EAAO,SAAAlB,GACZ,IAAQmB,EAA+EnB,EAA/EmB,SAAUhB,EAAqEH,EAArEG,UAAWiB,EAA0DpB,EAA1DoB,WAAYC,EAA8CrB,EAA9CqB,eAAgBC,EAA8BtB,EAA9BsB,WAAYC,EAAkBvB,EAAlBuB,cAErE,OACC,qBAAKpB,UAAS,UAFiBmB,EAAa,SAAW,YAEjB,YAAInB,EAAS,YAAIoB,EAAe,QAAUA,EAAgB,GAAE,YAAIH,EAAY,eAAiBA,EAAY,GAAE,YAAIC,EAAgB,mBAAqBA,EAAgB,IAAM,SAC9MF,GAGJ,EAUAD,EAAKb,aAAe,CACnBiB,YAAY,EACZC,cAAe,MACfpB,UAAW,IAIGe,K,wNCzBFM,EAAW,SACXC,ECAA,CACXC,iBAAkB,wBDDYA,iBACnBC,EAAkB,OAClBC,EAAmB,QAEnBC,EAAe,CAC3BC,cAAc,EACdC,aAAcC,IACdC,OAAQ,KACRC,QAASC,IACTC,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,Q,8kuBEhBf,4dAAO,IAAMC,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAqB,qBACrBC,EAAmC,mCACnCC,EAAuB,uBACvBC,EAAqC,oC,kCCblD,8OAAO,IAAMC,EAAa,GACbC,EAAiB,IACjBC,EAA2B,GAC3BxB,EAAiB,iBACjByB,EAAgB,gBAChBtB,EAAgB,OAChBuB,EAAe,K,oICMtBC,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQjB,MAiEfkB,EA9DF,WAAgC,IAA/BC,EAAK,uDAAGT,EAAWU,EAAM,uCACtC,OAAQA,EAAO9D,MACd,KAAKkC,IACJ,OAAO,2BACH2B,GAAK,IACRR,SAAS,EACTG,SAAU,IACVC,MAAOK,EAAOL,QAEhB,KAAKlB,IACJ,OAAO,2BACHsB,GAAK,IACRP,QAASQ,EAAOR,QAChBC,aAAa,EACbF,SAAS,IAEX,KAAKb,IACJ,OAAO,2BACHqB,GAAK,IACRP,QAAS,GACTC,aAAa,IAEf,KAAKnB,IACJ,OAAO,2BACHyB,GAAK,IACRJ,MAAO,KACPD,SAAU,IACVH,SAAS,IAGX,KAAKf,IACJ,OAAO,2BACFuB,GAAK,IACRR,SAAS,EACTI,MAAOK,EAAOL,QAGjB,KAAKhB,IACJ,OAAO,2BACHoB,GAAK,IACRR,SAAS,IAGX,KAAKT,IAOL,KAAKE,IACJ,OAAO,2BACHe,GAAK,IACRR,SAAS,EACTI,MAAOK,EAAOL,QAGhB,QACC,OAAOI,EAEV,EChFaE,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,e,QCKtBC,EAAS,eACVjD,KAkDUkD,EA/CD,WAAgC,IAA/BX,EAAK,uDAAGU,EAAWT,EAAM,uCACtC,OAAQA,EAAO9D,MACb,KAAK+D,EACH,OAAO,2BACFF,GAAK,IACRtC,aAAcuC,EAAOvC,eAEzB,KAAK0C,EACH,OAAO,2BACFJ,GAAK,IACRrC,aAAcsC,EAAOtC,eAEzB,KAAKwC,EACH,OAAO,2BACFH,GAAK,IACRnC,OAAQoC,EAAOpC,SAEnB,KAAKwC,EACH,OAAO,2BACFL,GAAK,IACRlC,QAASmC,EAAOnC,UAEpB,KAAKwC,EACH,OAAO,2BACFN,GAAK,IACRhC,YAAaiC,EAAOjC,cAExB,KAAKuC,EACH,OAAO,2BACFP,GAAK,IACR/B,eAAgBgC,EAAOhC,iBAE3B,KAAKuC,EACH,OAAO,2BACFR,GAAK,IACR9B,UAAW+B,EAAO/B,YAEtB,KAAKuC,EACH,OAAO,2BACFT,GAAK,IACR7B,aAAc8B,EAAO9B,eAEzB,QACE,OAAO6B,EAEb,E,QCtDMT,EAAY,CACdC,SAAS,EACTlD,MAAO,GACPI,MAAO,IA2BIkE,MAxBf,WAAgD,IAA1BZ,EAAM,UAAD,6CAAET,EAAUU,EAAM,uCACzC,OAAQA,EAAO9D,MACX,KAAKC,IACD,OAAO,2BACA4D,GAAK,IACRR,SAAS,IAEjB,KAAKjD,IACD,MAAO,CACHD,MAAO2D,EAAOzD,QACdgD,SAAS,EACT9C,MAAO,IAEf,KAAKC,IACD,MAAO,CACHD,MAAOuD,EAAOzD,QACdgD,SAAS,EACTlD,MAAO,IAEf,QACI,OAAO0D,EAEnB,ECxBea,EANEC,YAAgB,CAC7BH,MAAOI,EACPhB,KAAMiB,EACNC,MAAML,I,iDCGKM,G,cAXQ,CACrBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCHjBC,IAASC,cAAcC,GAGZF,IAASG,YAApB,IACM/B,EAAO4B,IAAS5B,OAEhBgC,GADchC,EAAKiC,YACE,IAAIL,IAAS5B,KAAKkC,oBACvCC,EAAuB,IAAIP,IAAS5B,KAAKoC,qBCVzCC,GDWsB,IAAIT,IAAS5B,KAAKsC,oBACnB,IAAIV,IAAS5B,KAAKuC,mBCZrB,CAAC,GAEzBF,EAAgBG,mBAAkB,iDAAG,WAAOC,EAAOC,GAAQ,2FACpD1C,EAAK2C,2BAA2BF,EAAOC,GAAUE,MAAK,SAAAC,GAAI,OAAIA,CAAI,IAAEC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAE,KAAD,mIAD1D,GAGlCV,EAAgBG,mBAAkB,iDAAG,WAAOC,EAAOC,GAAQ,2FACnD1C,EAAK2C,2BAA2BF,EAAOC,GAAUE,MAAK,SAAAC,GAAI,OAAIA,CAAI,IAAEC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAE,KAAD,mIAD3D,GAGlCV,EAAgBW,eAAc,gCAAG,wGAC1BhD,EAAKiD,UAAUL,MAAK,SAAAC,GAAI,OAAIA,CAAI,IAAEC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAE,KAAD,8EAE1DV,EAAgBa,oBAAmB,gCAAG,wGAC9BlD,EAAKmD,gBAAgBnB,GAAoBY,MAAK,SAAAC,GAAI,OAAIA,CAAI,IAAEC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAE,KAAD,8EAErFV,EAAgBe,sBAAqB,gCAAG,wGAChCpD,EAAKmD,gBAAgBhB,GAAsBS,MAAK,SAAAC,GAAI,OAAIA,CAAI,IAAEC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAE,KAAD,8EAEvFV,EAAgBgB,mBAAkB,iDAAG,WAAOZ,EAAOC,GAAQ,2FACpD1C,EAAKsD,+BAA+Bb,EAAOC,GAAUE,MAAK,SAAAC,GAAI,OAAIA,CAAI,IAAEC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAE,KAAD,mIAD9D,GAGnBV,Q,qBCFEkB,GAAiB,qBAiBjBN,GAAO,qBAgBPO,GAAiB,qBAkBjBC,GAAkB,qBAgBlBC,GAAkB,qBAgBVC,GAnFlB,SAAUJ,IAAiB,2EAChC,OADgC,SAC1BK,YAAUvF,IAAM,oBAAE,qGAGV,OAHsB5B,EAAO,EAAPA,QAC7BgG,EAAmBhG,EAAnBgG,MAAOC,EAAYjG,EAAZiG,SAAQ,kBAEFmB,YAAKxB,EAAgBG,mBAAoBC,EAAOC,GAAU,KAAD,EAAlE,KAAJG,EAAI,QACDnD,QAAQ,CAAD,gBACf,OADe,SACToE,YAAIC,YAAgBlB,EAAKnD,UAAU,KAAD,0BAGxC,OADAI,aAAakE,QAAQlF,IAAY+D,EAAKA,KAAKoB,KAAK,UAC1CH,YAAII,YAAcrB,EAAKA,KAAKoB,MAAM,KAAD,2BAGxC,OAHwC,oCAGlCH,YAAIC,YAAgB,EAAD,KAAO,KAAD,qDAE9B,KAAD,kCAGI,SAAUd,IAAO,2EACtB,OADsB,SAChBW,YAAUrF,IAAO,oBAAE,8FAEJ,OAFI,kBAEEsF,YAAKxB,EAAgBW,gBAAgB,KAAD,EAA7C,QACGmB,KADdC,EAAW,QACY,iBAE5B,OADAtE,aAAauE,WAAWvF,KAAY,SAC9BgF,YAAIQ,YAAeF,IAAc,KAAD,0BAEtC,OAFsC,UAEhCN,YAAIC,YAAgBK,EAAY1E,UAAU,KAAD,2BAGhD,OAHgD,oCAG1CoE,YAAIC,YAAgB,EAAD,KAAO,KAAD,qDAE9B,KAAD,kCAGI,SAAUP,IAAiB,2EAChC,OADgC,SAC1BI,YAAUnF,IAAM,oBAAE,qGAGV,OAHsBhC,EAAO,EAAPA,QAC7BgG,EAAmBhG,EAAnBgG,MAAOC,EAAYjG,EAAZiG,SAAQ,kBAEFmB,YAAKxB,EAAgBgB,mBAAoBZ,EAAOC,GAAU,KAAD,EAAlE,KAAJG,EAAI,QACDnD,QAAQ,CAAD,gBACf,OADe,SACToE,YAAIC,YAAgBlB,EAAKnD,UAAU,KAAD,0BAGxC,OADAI,aAAakE,QAAQlF,IAAY+D,EAAKA,KAAKoB,KAAK,UAC1CH,YAAIS,YAAc1B,EAAKA,KAAKoB,MAAM,KAAD,2BAGxC,OAHwC,oCAGlCH,YAAIC,YAAgB,EAAD,KAAS,KAAD,qDAGjC,KAAD,kCAGK,SAAUN,IAAkB,2EACjC,OADiC,SAC3BG,YAAU7E,IAAkB,oBAAE,8FAEtB,OAFsB,kBAEhB8E,YAAKxB,EAAgBa,qBAAqB,KAAD,EAAlD,KAAJL,EAAI,QACDnD,QAAQ,CAAD,eACf,OADe,SACToE,YAAIC,YAAgBlB,EAAKnD,UAAU,KAAD,yBAGxC,OADAI,aAAakE,QAAQlF,IAAY+D,EAAKA,KAAKoB,KAAK,UAC1CH,YAAIU,YAA8B3B,EAAKA,KAAKoB,MAAM,KAAD,2BAGxD,OAHwD,oCAGlDH,YAAIC,YAAgB,EAAD,KAAS,KAAD,qDAEhC,KAAD,kCAGI,SAAUL,IAAkB,2EACjC,OADiC,SAC3BE,YAAU3E,IAAoB,oBAAE,8FAExB,OAFwB,kBAElB4E,YAAKxB,EAAgBe,uBAAuB,KAAD,EAApD,KAAJP,EAAI,QACDnD,QAAQ,CAAD,eACf,OADe,SACToE,YAAIC,YAAgBlB,EAAKnD,UAAU,KAAD,yBAGxC,OADAI,aAAakE,QAAQlF,IAAY+D,EAAKA,KAAKoB,KAAK,UAC1CH,YAAIW,YAAgC5B,EAAKA,KAAKoB,MAAM,KAAD,2BAG1D,OAH0D,oCAGpDH,YAAIC,YAAgB,EAAD,KAAS,KAAD,qDAEhC,KAAD,kCAGY,SAAUJ,IAAQ,2EAC/B,OAD+B,SACzBe,YAAI,CACVC,YAAKpB,GACLoB,YAAK1B,GACL0B,YAAKnB,GACLmB,YAAKlB,GACLkB,YAAKjB,KACF,KAAD,kC,sDCtGM7G,IAAU,sBAYK+H,IAfnBC,GAAa,iDAAI,wGAAoBC,IAAMC,IAAI,8CAA8CnC,MAAK,SAAAoC,GAAG,OAAIA,EAAIC,IAAI,IAAEnC,OAAM,SAAAC,GAAG,OAAIA,CAAG,IAAC,qGAAvH,mCAGnB,SAAUlG,KAAU,iFAEZ,OAFY,kBAENiH,YAAI3H,gBAAoB,OAChB,OADgB,SACV0H,YAAKgB,IAAc,OAA5B,KAALtI,EAAK,QACD,CAAD,eACL,OADK,SACCuH,YAAIxH,aAAkBC,IAAO,+BAGvC,OAHuC,oCAGjCuH,YAAIpH,aAAkB,EAAD,KAAQ,uDAI5B,SAAUkI,KAAiB,2EACtC,OADsC,SAChChB,YAAU9G,IAAYD,IAAW,wC,0BCjBlB8G,IAAV,SAAUA,GAASuB,GAAQ,2EACxC,OADwC,SAClCR,YAAI,CACRzD,IACAkE,OACC,KAAD,mCCHJ,IAAMC,GAAiBC,cAEjBC,GAAc,CAACF,IAqBrB,IAEeG,GArBf,SAAwBC,GAEtB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEL,EAAQM,YAAY/E,EAAU0E,EAAgBC,EAClDK,IAAe,aAAIR,MAYrB,OATAF,GAAeW,IAAIpC,IASZ4B,CACT,CAEcS,G,+FCxBCC,iBADK,SAAApK,GAAK,OAAI,eAAC,KAAgB,eAAKA,GAAU,GACtB,CACrCqK,SAAS,I,oCCHE1K,GAAI,qHAMf,OANe,oCAChB,WACC,MAA6B2K,KAAKtK,MAA1BO,EAAI,EAAJA,KAAMJ,EAAS,EAATA,UACd,OACC,qCAAGoK,IAAMC,cAAcjK,EAAM,CAAEJ,UAAWA,KAE5C,KAAC,EANe,CAASsK,aASX9K,M,wHCKT+K,GAAmB,CAAC,CACxBC,IAAK,OACLC,KAAK,GAAD,OAAKjJ,IAAe,SACxBkJ,MAAO,mDACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,YACLC,KAAK,GAAD,OAAKjJ,IAAe,mBACxBkJ,MAAO,6CACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,UACLC,KAAK,GAAD,OAAKjJ,IAAe,YACxBkJ,MAAO,6CACPC,KAAMI,KACNF,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,WACLC,KAAK,GAAD,OAAKjJ,IAAe,qBACxBkJ,MAAO,uCACPG,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,aACLC,KAAK,GAAD,OAAKjJ,IAAe,uBACxBkJ,MAAO,yDACPG,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,aACLC,KAAK,GAAD,OAAKjJ,IAAe,uBACxBkJ,MAAO,yDACPG,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,QACLC,KAAK,GAAD,OAAKjJ,IAAe,kBACxBkJ,MAAO,iCACPG,YAAY,EACZC,QAAS,MAIf,CACEN,IAAK,SACLC,KAAK,GAAD,OAAKjJ,IAAe,WACxBkJ,MAAO,uCACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,UACLC,KAAK,GAAD,OAAKjJ,IAAe,YACxBkJ,MAAO,6CACPC,KAAMM,KACNJ,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,eACLC,KAAK,GAAD,OAAKjJ,IAAe,yBACxBkJ,MAAO,wFACPG,YAAY,EACZC,QAAS,IAIX,CACEN,IAAK,gBACLC,KAAK,GAAD,OAAKjJ,IAAe,0BACxBkJ,MAAO,wFACPG,YAAY,EACZC,QAAS,MAOf,CACEN,IAAK,UACLC,KAAK,GAAD,OAAKjJ,IAAe,YACxBkJ,MAAO,6CACPC,KAAMO,KACNL,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,QACLC,KAAK,GAAD,OAAKjJ,IAAe,UACxBkJ,MAAO,yDACPC,KAAMQ,KACNN,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,UACLC,KAAK,GAAD,OAAKjJ,IAAe,mBACxBkJ,MAAO,4EACPC,KAAMS,KACNP,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,kBACLC,KAAK,GAAD,OAAKjJ,IAAe,gCACxBkJ,MAAO,uCACPG,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,WACLC,KAAK,GAAD,OAAKjJ,IAAe,iCACxBkJ,MAAO,8CACPG,YAAY,EACZC,QAAS,MAIf,CACEN,IAAK,QACLC,KAAK,GAAD,OAAKjJ,IAAe,UACxBkJ,MAAO,+DACPC,KAAMU,KACNR,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,OACLC,KAAK,GAAD,OAAKjJ,IAAe,SACxBkJ,MAAO,mDACPC,KAAMW,KACNT,YAAY,EACZC,QAAS,OAOTS,GAAgB,CAAC,CACrBf,IAAK,SACLC,KAAK,GAAD,OAAKjJ,IAAe,SACxBkJ,MAAO,yDACPG,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,WACLC,KAAK,GAAD,OAAKjJ,IAAe,aACxBkJ,MAAO,yDACPC,KAAMa,KACNX,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,aACLC,KAAK,GAAD,OAAKjJ,IAAe,eACxBkJ,MAAO,sHACPC,KAAMc,KACNZ,YAAY,EACZC,QAAS,IAEX,CACEN,IAAK,OACLC,KAAK,GAAD,OAAKjJ,IAAe,SACxBkJ,MAAO,2BACPC,KAAMe,KACNb,YAAY,EACZC,QAAS,OAcAa,GALO,UACjBpB,GACAgB,IC3MCK,GAAK,6CAqNT,OArNS,iDAOV,SAAsBC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,aAC5D,GAEA,0BAMA,SAAoBC,EAAS1B,GAC5B,GAAI0B,EAAQ1B,OAASA,EACnB,OAAO0B,EAGT,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQjC,KAAKoC,aAAaJ,EAAQE,GAAI5B,IAErC,OAAO2B,EAIV,OAAOA,CACR,GAEA,8BAKA,SAAwBI,GACvB,IAAIA,EACH,MAAO,OAER,IACMC,EAGqBC,SAAUC,EAHjBH,GAG4BI,UAAU,EAAE,GAAG,IAFzDC,EAGN,SAAgBC,GAAI,OAAOJ,SAAUC,EAAOG,GAAIF,UAAU,EAAE,GAAG,GAAG,CAHnDG,CAAOP,GAChBQ,EAGN,SAAgBF,GAAI,OAAOJ,SAAUC,EAAOG,GAAIF,UAAU,EAAE,GAAG,GAAG,CAHpDK,CAAOT,GAIrB,SAASG,EAAOG,GAAI,MAAwB,MAAhBA,EAAEI,OAAO,GAAcJ,EAAEF,UAAU,EAAE,GAAGE,CAAC,CAErE,OAD6B,IAAPL,EAAwB,IAATI,EAAyB,IAARG,GAAgB,IARpD,IAUV,OAEA,OAET,GAEA,wBAMA,SAAkBG,EAAOC,GACxB,IAAIC,EAAIX,SAASS,EAAMP,UAAU,EAAE,GAAG,IAClCU,EAAIZ,SAASS,EAAMP,UAAU,EAAE,GAAG,IAClCW,EAAIb,SAASS,EAAMP,UAAU,EAAE,GAAG,IACtCS,EAAIX,SAASW,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIZ,SAASY,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIb,SAASa,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIC,OAAY,WAAQL,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEE,EAAiC,IAA1BL,EAAEG,SAAS,IAAIC,OAAY,WAAQJ,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEG,EAAiC,IAA1BL,EAAEE,SAAS,IAAIC,OAAY,WAAQH,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAE,OAAGG,GAAE,OAAGC,EACtB,GAEA,uBAKA,SAAiBC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,GAAG,EAC5CC,EAAUJ,EAAKjB,UAAUiB,EAAKK,QAAQ,MAAMC,MAAM,KACvDC,EAAI1B,SAASoB,EAAKG,EAAQ,GAAGrB,UAAU,IAAK,IAC5CyB,EAAI3B,SAASoB,EAAKG,EAAQ,IAAK,IAC/BK,EAAI5B,SAASoB,EAAKG,EAAQ,IAAK,IAC/BM,EAAIC,WAAWV,EAAKG,EAAQ,GAAGrB,UAAU,EAAGqB,EAAQ,GAAGP,OAAS,KAAKe,QAAQ,GACvEC,EAAW,CACjBN,EAAEX,SAAS,IACXY,EAAEZ,SAAS,IACXa,EAAEb,SAAS,IACXkB,KAAKC,MAAU,IAAJL,GAASd,SAAS,IAAIb,UAAU,EAAG,IAQ/C,OALA8B,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAKpB,SACRgB,EAASK,GAAK,IAAMD,EAEtB,IACM,IAAN,OAAYJ,EAASM,KAAK,IAC3B,GAEA,wBAOA,SAAkBC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,IACR,GAEA,6BAOA,SAAuBZ,EAAGD,EAAG9D,GAC5B,MAAqB,kBAAX+D,EAAE/D,IAAuC,kBAAX8D,EAAE9D,GAClC+D,EAAE/D,GAAO8D,EAAE9D,GAGE,kBAAX+D,EAAE/D,IAAuC,kBAAX8D,EAAE9D,IACzC+D,EAAIA,EAAE/D,GAAK4E,gBACXd,EAAIA,EAAE9D,GAAK4E,gBACK,EAAId,EAAIC,EAAI,EAAI,OAHjC,CAMD,GAEA,yBAOA,SAAmBc,EAAM7E,EAAK8E,GAC7B,IAAIrG,EAAOoG,EAIX,OAHGA,IACFpG,EAAOoG,EAAKE,QAAO,SAAAC,GAAI,OAAIA,EAAKhF,KAAS8E,CAAK,KAExCrG,CACR,GAEA,4BAOA,SAAsBoG,EAAM7E,EAAK8E,GAChC,IAAIrG,EAAOoG,EAIX,OAHGA,IACFpG,EAAOoG,EAAKE,QAAO,SAAAC,GAAI,OAAIA,EAAKhF,KAAS8E,CAAK,KAExCrG,CACR,GAEA,4BAMA,SAAsBoG,EAAMI,GAY3B,OADAJ,EAAOA,EAAKE,QAAO,SAAAD,GAAK,OAVL,SAACE,GACnB,IAAK,IAAIhF,KAAOgF,EACf,GAAiB,MAAbA,EAAKhF,KAG2E,IAAhFgF,EAAKhF,GAAKiD,WAAWvB,cAAcgC,QAAQuB,EAAMhC,WAAWvB,eAC/D,OAAO,CAGV,CAC4BwD,CAAWJ,EAAM,GAE9C,GAEA,2BAKA,SAAqBK,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAMpF,KAAOmF,EAAS,CAC1B,GAAIA,EAAQrD,eAAe9B,GACVmF,EAAQnF,IAEvBoF,EAAYC,KAAKrF,EAGpB,CACA,OAAOoF,CACR,KAAC,EArNS,GAwNIhE,MC7MR,SAASkE,GAAmBnO,GACjC,MAAO,CACLvB,KAAM+D,EACNxC,eAEJ,CAqCO,SAASoO,GAAkB5N,GAChC,MAAO,CACL/B,KAAMqE,EACNtC,YAEJ,CC/CA,IAAQ6N,GAAYC,KAAZD,QACAE,GAAkBC,KAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAS,OACtCD,EAAa,eAAC,GAAW,CAACE,GAAID,IAAgBA,EAAU7C,UAAW,EAE/D+C,GAAiB,SAAChG,GACtB,IAAIiG,EAAU,GACVC,EAAY,GAChB,GAAIlG,EAEF,IADA,IAAMmG,EAAMnG,EAAI2D,MAAM,KACbyC,EAAQ,EAAGA,EAAQD,EAAIjD,OAAQkD,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAS,YAAIG,GAC/DJ,EAAQZ,KAAKa,EACf,CAEF,OAAOD,CACT,EAEMK,GAAiB,SAACjR,GACvB,IAAQ+B,EAA6E/B,EAA7E+B,aAAcmP,EAA+DlR,EAA/DkR,UAAWC,EAAoDnR,EAApDmR,eAAgBC,EAAoCpR,EAApCoR,aAAclB,EAAsBlQ,EAAtBkQ,kBACzDmB,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAC1DC,EAAiB,WAClBJ,GACHnB,GAAkB,EAEpB,EACC,OACE,eAAC,KAAI,CACHnL,MAAOhD,IAAiBC,KAAiB,QAAU,OACnD0P,KAAK,SACL9R,MAAO,CAAE+R,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,CAAU,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWvG,KACjCmH,gBAAiBnB,GAAwB,OAATO,QAAS,IAATA,OAAS,EAATA,EAAWvG,KAC3CxK,UAAWgR,EAAiB,mBAAqB,GAAG,SAEnDrF,GAAiBiG,KAAI,SAACC,GAAI,OACzBA,EAAK/G,QAAQ4C,OAAS,EACpB,eAAC,KAAKoE,UAAS,CAEbpH,MAAO0F,GAAUa,EAAcY,EAAKnH,OAAO,SAE1CmH,EAAK/G,QAAQ8G,KAAI,SAACG,GAAY,OAC7BA,EAAajH,QAAQ4C,OAAS,EAC5B,eAACsC,GAAO,CACNrF,KACEoH,EAAapH,KACX,eAAC,GAAI,CAACvK,KAAkB,OAAZ2R,QAAY,IAAZA,OAAY,EAAZA,EAAcpH,OACxB,KAGND,MAAO0F,GAAUa,EAAcc,EAAarH,OAAO,SAElDqH,EAAajH,QAAQ8G,KAAI,SAACI,GAAa,OACtC,gBAAC,KAAKC,KAAI,WACPD,EAAcrH,KACb,eAAC,GAAI,CAACvK,KAAmB,OAAb4R,QAAa,IAAbA,OAAa,EAAbA,EAAerH,OACzB,KACJ,gCACGyF,GAAUa,EAAce,EAActH,SAEzC,eAAC,KAAI,CAACwH,QAAS,kBAAMZ,GAAgB,EAAEa,GAAIH,EAAcvH,SAP3CuH,EAAcxH,IAQlB,KAZTuH,EAAavH,KAgBpB,gBAAC,KAAKyH,KAAI,WACPF,EAAapH,KAAO,eAAC,GAAI,CAACvK,KAAM2R,EAAapH,OAAW,KACzD,gCAAOyF,GAAUa,EAAcc,EAAarH,SAC5C,eAAC,KAAI,CAACwH,QAAS,kBAAMZ,GAAgB,EAAEa,GAAIJ,EAAatH,SAH1CsH,EAAavH,IAK9B,KAhCEqH,EAAKrH,KAoCZ,gBAAC,KAAKyH,KAAI,WACPJ,EAAKlH,KAAO,eAAC,GAAI,CAACvK,KAAU,OAAJyR,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,OAAW,KAC1C,gCAAOyF,GAAUa,EAAkB,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAMnH,SACpCmH,EAAKpH,KAAO,eAAC,KAAI,CAACyH,QAAS,kBAAMZ,GAAgB,EAAEa,GAAIN,EAAKpH,OAAW,OAH1DoH,EAAKrH,IAKtB,KAIT,EAEM4H,GAAgB,SAACvS,GACrB,IAAQoC,EAA8BpC,EAA9BoC,YAAagP,EAAiBpR,EAAjBoR,aACrB,OACE,eAAC,KAAI,CAACM,KAAK,aAAa9R,MAAO,CAAE4S,gBAAiBpQ,GAAc,SAC7D0J,GAAiBiG,KAAI,SAACC,GAAI,OACzBA,EAAK/G,QAAQ4C,OAAS,EACpB,eAACsC,GAAO,CAENsC,eAAe,eACf5H,MACE,kCACGmH,EAAKlH,KAAO,eAAC,GAAI,CAACvK,KAAU,OAAJyR,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,OAAW,KAC1C,gCAAOyF,GAAUa,EAAcY,EAAKnH,YAEvC,SAEAmH,EAAK/G,QAAQ8G,KAAI,SAACG,GAAY,OAC7BA,EAAajH,QAAQ4C,OAAS,EAC5B,eAACsC,GAAO,CAENrF,KACEoH,EAAapH,KACX,eAAC,GAAI,CAACvK,KAAkB,OAAZ2R,QAAY,IAAZA,OAAY,EAAZA,EAAcpH,OACxB,KAEND,MAAO0F,GAAUa,EAAcc,EAAarH,OAAO,SAElDqH,EAAajH,QAAQ8G,KAAI,SAACI,GAAa,OACtC,gBAAC,KAAKC,KAAI,WACR,gCACG7B,GAAUa,EAAce,EAActH,SAEzC,eAAC,KAAI,CAACyH,GAAIH,EAAcvH,SAJVuH,EAAcxH,IAKlB,KAdTuH,EAAavH,KAkBpB,gBAAC,KAAKyH,KAAI,WACPF,EAAapH,KACZ,eAAC,GAAI,CAACvK,KAAkB,OAAZ2R,QAAY,IAAZA,OAAY,EAAZA,EAAcpH,OACxB,KACJ,gCAAOyF,GAAUa,EAAcc,EAAarH,SAC5C,eAAC,KAAI,CAACyH,GAAIJ,EAAatH,SALTsH,EAAavH,IAO9B,KArCEqH,EAAKrH,KAyCZ,gBAAC,KAAKyH,KAAI,WACPJ,EAAKlH,KAAO,eAAC,GAAI,CAACvK,KAAU,OAAJyR,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,OAAW,KAC1C,gCAAOyF,GAAUa,EAAkB,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAMnH,SACpCmH,EAAKpH,KAAO,eAAC,KAAI,CAAC0H,GAAIN,EAAKpH,OAAW,OAHzBoH,EAAKrH,IAKtB,KAIT,EAee+H,gBALS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAEhD,aAD6BgD,EAA9BhD,aACeK,YADe2C,EAAhB3C,YAExB,GAEwC,CAAE8N,sBAA3BwC,EAbK,SAAC1S,GACnB,OAAOA,EAAMO,OAAS4B,KACpB,eAAC,GAAc,eAAKnC,IAEpB,eAAC,GAAa,eAAKA,GAEvB,IC5JQ2S,GAAUC,KAAVD,MAyBOD,gBALS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAEjD,aAD+BiD,EAAhCjD,aACeC,aADiBgD,EAAlBhD,aAExB,GAEe2Q,EAvBQ,SAAH,GAAuF,IAAlF5Q,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAAcmP,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAe,EAAD,EAAEC,aACxEpR,EAAQ,CAAE+B,eAAcmP,YAAYC,iBAAgBC,kBADgC,OAAO,GAEjG,OACE,eAACuB,GAAK,CACJxS,UAAS,mBAAc4B,IAAiB0B,KAAe,gBAAkB,IACzEoP,MAAOtP,KACPuP,UAAWhR,EAAa,SAExB,eAAC,cAAU,CAACiR,UAAQ,WAClB,eAAC,GAAW,aACVxS,KAAM4B,MACFnC,OAKd,ICAe0S,gBALS,SAAH,GAEnB,MAAO,CAAEtQ,YAFqB,EAAL2C,MACjB3C,YAEV,GAEesQ,EAnBO,SAAH,GAA4C,IAAvCtQ,EAAW,EAAXA,YAAY,EAAD,EAAEgP,aAC9BpR,EAAQ,CAAEoC,cAAagP,kBADmB,OAAO,GAEvD,OACC,sBAAKjR,UAAS,kBAAamR,GAAM0B,iBAAiB5Q,IAAgBxC,MAAO,CAAC4S,gBAAiBpQ,GAAa,SACvG,sBAAKjC,UAAU,kBAAiB,SAC/B,eAAC,GAAW,aACXI,KAAMmD,MACF1D,OAKT,I,oBCXQqQ,GAAkBC,KAAlBD,cAEF4C,GAAqB,SAACjT,EAAOqR,GACjC,IAAQvP,EAA0B9B,EAA1B8B,aACFoR,EAD4BlT,EAAZkC,UACOwB,KAC7B,OAAG2N,IAAarR,EAAMmT,WACb,EAEND,EACM,OAGD,GAAN,OADCpR,EACS0B,KAEAD,KAFwB,KAItC,EAEM6P,GAAU,SAACpT,GACf,IAAQ8B,EAA2B9B,EAA3B8B,aACR,MAAgB,UADmB9B,EAAbqT,SAEjBvR,EACM,yBAEF,sBAGLA,EACK,mBAEF,eACT,EAEMwR,GAAiB,SAACjC,EAAU8B,GAChC,OAAG9B,IAAa8B,EACP,SAEA,MAEX,EAkBeT,gBALS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAEjD,aAD0BiD,EAA3BjD,aACeI,QADY6C,EAAb7C,QAExB,GAEewQ,EAhBK,SAAC1S,GACnB,IAAMqR,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAChE,OACE,sBACErR,UAAWmT,GAAejC,EAAUrR,EAAMmT,YAC1CvT,MAAO,CAACiT,MAAM,GAAD,OAAKI,GAAmBjT,EAAOqR,KAAa,SACzD,sBAAKkC,IAAKH,GAAQpT,GAAQwT,IAAG,UAAKhS,IAAQ,YAGhD,I,oBCFekR,gBALS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAEjD,aADyCiD,EAA1CjD,aACeC,aAD2BgD,EAA5BhD,aACeO,UADayC,EAAdzC,UAEtC,GAEwC,CAAE4N,sBAA3BwC,EA5CU,SAAH,GAOf,IANL3Q,EAAY,EAAZA,aACAO,EAAS,EAATA,UACA4N,EAAiB,EAAjBA,kBACAgB,EAAS,EAATA,UACAC,EAAc,EAAdA,eAAe,EAAD,EACdC,aAEMpR,EAAQ,CAAE+B,eAAcmP,YAAWC,iBAAgBC,kBAF7C,OAAO,GAIbqC,EAAU,WACdvD,GAAkB,EACpB,EAEA,OACE,eAAC,KAAM,CACLwD,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAAStR,EACTuR,UAAW,CAAEC,QAAS,GAAI,SAE1B,gBAAC5S,GAAA,EAAI,CAACK,cAAc,SAASpB,UAAU,QAAO,UAC5C,gBAACe,GAAA,EAAI,CAACG,eAAe,UAAUD,WAAW,SAAQ,UAChD,eAAC,GAAI,CAAC+R,YAAY,IAClB,sBAAKhT,UAAU,YAAYkS,QAAS,kBAAMoB,GAAS,EAAC,SAClD,eAACM,GAAA,EAAiB,SAGtB,sBAAK5T,UAAU,kBAAiB,SAC9B,eAAC,cAAU,CAAC4S,UAAQ,WAClB,eAAC,GAAW,aAACxS,KAAM4B,MAAmBnC,YAMlD,I,wFCIegU,GAhDK,SAAAhU,GAEnB,IAAQiU,EAA0BjU,EAA1BiU,YAAY,EAAcjU,EAAbsN,aAAK,IAAC,KAAE,EAE7B,EAA8B4G,oBAAS,GAAM,oBAAtCN,EAAO,KAAEO,EAAU,KAC1B,EAAsCD,mBAAS5G,GAAM,oBAA9C8G,EAAW,KAAEC,EAAc,KAClC,EAAgCH,mBAAS5G,GAAM,oBAAxCgH,EAAQ,KAAEC,EAAW,KAE5BC,qBAAU,WACTD,EAAYjH,GACZ+G,EAAe/G,EAChB,GAAG,CAACA,IAEJ,IAAMmH,EAAmB,WACxBN,GAAYP,EACb,EAUA,OACC,uBAAKzT,UAAU,eAAc,UAC5B,sBAAKA,UAAU,wBAAuB,SACrC,sBAAKA,UAAU,QAAQP,MAAO,CAAC4S,gBAAiB8B,GAAsB,WAAYjC,QAASoC,MAG3Fb,GACC,uCACC,sBAAKzT,UAAU,wBAAwBkS,QAASoC,IAChD,eAAC,KAAY,CAACnH,MAAO8G,EAAaM,SAjBjB,SAACjF,GACtB,IAAOkF,EAAOlF,EAAPkF,IACD3G,EAAI,cAAU2G,EAAIpG,EAAC,aAAKoG,EAAInG,EAAC,aAAKmG,EAAIlG,EAAC,aAAKkG,EAAIjG,EAAC,KACvD6F,EAAYvG,GACZqG,EAAeM,GACfV,EAAYxE,EACb,SAiBD,E,uEChCA,IAAMmF,GAAmB,SAAH,GAAoB,IACnCC,EANP,SAA4B5S,GAE3B,OADa6S,GAAKpF,QAAO,SAAAsB,GAAG,OAAKA,EAAI+D,SAAW9S,CAAM,IAC1C,EACb,CAGkB+S,CADgB,EAAN/S,QAEpBgT,EAAkBJ,EAAlBI,SAAUnK,EAAQ+J,EAAR/J,KACjB,OACC,uBAAK3K,UAAU,4BAA2B,UACzC,sBAAKP,MAAO,CAACsV,SAAU,QAAS3B,IAAG,qBAAgBzI,EAAI,QAAQ0I,IAAKyB,IACpE,wBAAM9U,UAAU,4BAA2B,UAAE8U,EAAQ,IAAE,eAACE,GAAA,EAAY,CAAChV,UAAU,sBAGlF,EAqDeuS,gBALS,SAAH,GAEnB,MAAO,CAAEzQ,OAFqB,EAAL8C,MACjB9C,OAEV,GAEwC,CAACmT,ePjDlC,SAAwBnT,GAC7B,MAAO,CACL1B,KAAMgE,EACNtC,SAEJ,GO4CeyQ,EAnDY,SAAH,GAAmD,IAA7CzQ,EAAM,EAANA,OAAQoT,EAAa,EAAbA,cAAeD,EAAc,EAAdA,eAC9CE,EACL,eAAC,KAAI,UAEHR,GAAK/C,KAAI,SAACf,EAAK9B,GAAO,OACrB,eAAC,KAAKkD,KAAI,CAETjS,UAAW8B,IAAW+O,EAAI+D,OAAQ,gCAAiC,GACnE1C,QAAS,kBAAM+C,EAAepE,EAAI+D,OAAO,EAAC,SAE1C,wBAAM5U,UAAU,oDAAmD,UAClE,iCACC,sBAAKP,MAAO,CAACsV,SAAU,QAAS3B,IAAG,qBAAgBvC,EAAIlG,KAAI,QAAQ0I,IAAKxC,EAAIiE,WAC5E,uBAAM9U,UAAU,0BAAyB,SAAE6Q,EAAIiE,cAE/ChT,IAAW+O,EAAI+D,OAAQ,eAACQ,GAAA,EAAa,CAACpV,UAAU,iBAAoB,SATjE+O,EAYN,MAIJ,OACC,eAAC,KAAQ,CAACwE,UAAU,cAAc8B,QAASF,EAAgBG,QAAS,CAAC,SAAS,SAE5EJ,EAEC,oBAAGK,KAAK,KAAKvV,UAAU,YAAYkS,QAAS,SAAAsD,GAAC,OAAIA,EAAEC,gBAAgB,EAAC,SACnE,eAAC,GAAgB,CAAC3T,OAAQA,MAK3B,eAAC,KAAI,CAACyP,KAAK,aAAY,SACtB,eAAC,KAAKU,KAAI,UACT,oBAAGsD,KAAK,KAAKrD,QAAS,SAAAsD,GAAC,OAAIA,EAAEC,gBAAgB,EAAC,SAC7C,eAACC,GAAA,EAAc,CAAC1V,UAAU,yBAQlC,I,UC3CM2V,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,SAAH,OAAK/J,EAAI,EAAJA,KAAMgK,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,OACtD,uBAAK/V,UAAS,eAAU+V,EAAU,GAAK,qDAAsD,UAC5F,sBAAK/V,UAAS,UAAK8V,EAAW,cAAgB,GAAE,YAAIC,EAAU,OAAS,IAAK,SAAElK,IAC9E,+BAAMgK,MACD,EAwJDG,GAAqB,CAC1BlG,sBACAmG,gBR9JM,SAAyBlU,GAC9B,MAAO,CACL3B,KAAMkE,EACNvC,UAEJ,EQ0JCmU,iBR7KM,SAA0BtU,GAC/B,MAAO,CACLxB,KAAMiE,EACNzC,eAEJ,EQyKCuU,oBRzJM,SAA6BlU,GAClC,MAAO,CACL7B,KAAMmE,EACNtC,cAEJ,EQqJCmU,uBRnJM,SAAgClU,GACrC,MAAO,CACL9B,KAAMoE,EACNtC,iBAEJ,EQ+ICmU,cRtIM,SAAuBjU,GAC5B,MAAO,CACLhC,KAAMsE,EACNtC,eAEJ,GQoIemQ,gBAdS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAE7C,QAD2F6C,EAA5F7C,QACUH,aADkFgD,EAAnFhD,aACeD,aADoEiD,EAArEjD,aACeM,YADsD2C,EAAvD3C,YACcC,eADyC0C,EAA1C1C,eACiBJ,OADyB8C,EAA1B9C,OACSM,aADiBwC,EAAlBxC,aAEpF,GAWwC4T,GAAzBzD,EA9JkB,SAAH,GAcvB,IAoCsB+D,EAjD5BvU,EAAO,EAAPA,QACAH,EAAY,EAAZA,aACAD,EAAY,EAAZA,aACAM,EAAW,EAAXA,YACAC,EAAc,EAAdA,eACAJ,EAAM,EAANA,OACAM,EAAY,EAAZA,aACA0N,EAAkB,EAAlBA,mBACAmG,EAAe,EAAfA,gBACAC,EAAgB,EAAhBA,iBACAC,EAAmB,EAAnBA,oBACAC,EAAsB,EAAtBA,uBACAC,EAAa,EAAbA,cAEMtD,EAAWhR,IAAYwB,KACvBgT,EAAa5U,EAEnB,EAA6B6U,8BAArBC,EAAQ,EAARA,SAAUC,EAAM,EAANA,OAkClB,OACC,uCACC,uBAAK1W,UAAU,OAAM,UACpB,qBAAIA,UAAU,wBAAuB,wBAEpC+S,EACA,eAAC,GAAU,CACVlH,KAAK,iBACLkK,UAAQ,EACRF,SACC,eAAC,GAAW,CAAC1I,MAAOlL,EAAa6R,YAnCZ,SAACxE,GAC3B8G,EAAuB,IACvB,IAAQ5B,EAAQlF,EAARkF,IACF3G,EAAI,eAAW2G,EAAIpG,EAAC,aAAKoG,EAAInG,EAAC,aAAKmG,EAAIlG,EAAC,aAAKkG,EAAIjG,EAAC,KAClD/B,EAAM2E,GAAMwF,UAAU9I,GAC5BsI,EAAoB3J,EACrB,MAiCI,eAAC,GAAU,CACVX,KAAK,oBACLkK,UAAQ,EACRF,SACC,eAAC,GAAW,CAAC1I,MAAOjL,EAAgB4R,YApCZ,SAACxE,GAC9B,IAAQkF,EAAQlF,EAARkF,IACF3G,EAAI,eAAW2G,EAAIpG,EAAC,aAAKoG,EAAInG,EAAC,aAAKmG,EAAIlG,EAAC,aAAKkG,EAAIjG,EAAC,KAClD/B,EAAM2E,GAAMwF,UAAU9I,GAC5BuI,EAAuB5J,EACxB,MAoCG,eAAC,GAAU,CACVX,KAAK,mBACLgK,SACC,gBAAC,KAAMe,MAAK,CACXC,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAvCOlG,EAuCYkG,EAAEsB,OAAOxH,MAtC5C8G,EAAuB,IACpB9G,IAAU/L,OACZ4S,EAAoBR,GAAa,IACjC7F,GAAmB,SAEpBmG,EAAgB3G,GANM,IAACA,CAuC2B,EAC7CA,MAAOvN,EAAQ,UAEf,eAAC,KAAMgV,OAAM,CAACzH,MAAOtN,KAAc,kBACnC,eAAC,KAAM+U,OAAM,CAACzH,MAAO/L,KAAa,sBAIrC,eAAC,GAAU,CACVsI,KAAK,kBACLgK,SACC,gBAAC,KAAMe,MAAK,CACXd,SAAU/C,EACV8D,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAAIU,EAAiBV,EAAEsB,OAAOxH,MAAM,EAC/CA,MAAO1N,EAAa,UAEpB,eAAC,KAAMmV,OAAM,CAACzH,MAAOzN,KAAe,mBACpC,eAAC,KAAMkV,OAAM,CAACzH,MAAOhM,KAAc,qBAGrCwS,SAAU/C,IAEX,eAAC,GAAU,CACVlH,KAAK,qBACLgK,SACC,eAAC,KAAM,CACNC,SAAU/C,EACViE,QAAST,EACThC,SAAU,kBAAMzE,GAAoBnO,EAAa,IAGnDmU,SAAU/C,IAEX,eAAC,GAAU,CACVlH,KAAK,cACLgK,SACC,eAAC,KAAM,CAACmB,QAA0B,SAAjB5U,EAAyBmS,SAjG3B,SAAC0C,GACpBb,EAAuB,IACvB,IAAMc,EAAeD,EAAY,OAAS,QAC1CZ,EAAca,GACZT,EAAS,CAAE7R,MAAO8R,EAAOQ,IAC3B,SAgGC,uBAAKlX,UAAU,OAAM,UACpB,qBAAIA,UAAU,wBAAuB,oBACrC,eAAC,GAAU,CACV6L,KAAK,YACLgK,SACC,eAAC,GAAW,CAACX,eAAa,SAI7B,+BACC,eAAC,KAAe,CACfiC,MAlFwBb,EAkFC,CAAEvU,UAASH,eAAcD,eAAcM,cAAaC,iBAAgBJ,SAAQM,gBAlF7DgV,KAAKC,UAAUf,EAAa,KAAM,IAmF1EgB,OAAQ,kBAAM5T,KAAQ6T,QAAQ,mFAAmF,EAAE,SAEnH,eAAC,KAAM,CAAC5M,KAAM,eAAC6M,GAAA,EAAY,IAAMC,OAAK,WACrC,yDAMN,IC/KaC,GAAQ,oKAalB,OAbkB,oCACpBzT,MAAQ,CAAEwP,SAAS,GAAQ,EAE1BkE,WAAa,WACX,EAAKC,SAAS,CACZnE,SAAS,GAEb,EAAE,EAEFH,QAAU,WACR,EAAKsE,SAAS,CACZnE,SAAS,GAEd,EAAC,EAqBA,OArBA,oCAED,WACC,OACI,uCACE,eAAC,KAAI,CAAClC,KAAK,aAAY,SACrB,eAAC,KAAKU,KAAI,CAACC,QAAS/H,KAAKwN,WAAW,SAClC,eAACnM,GAAA,EAAe,CAACxL,UAAU,sBAG/B,eAAC,KAAM,CACL0K,MAAM,eACN6I,UAAU,QACVb,MAAO,IACPY,QAASnJ,KAAKmJ,QACdG,QAAStJ,KAAKlG,MAAMwP,QAAQ,SAE5B,eAAC,GAAiB,QAI3B,KAAC,EAlCmB,CAASnJ,aA0CfiI,gBALS,SAAH,GAEnB,MAAO,CAAEzQ,OAFqB,EAAL8C,MACjB9C,OAEV,GAEeyQ,CAAyBmF,I,sECtBxC,IAAMG,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GAAG,IACL,EADK,eACnBD,GAAc,IAArC,2BAAwC,CAAC,IAA7BE,EAAO,QACY,IAA3BA,EAAQnN,QAAQ4C,QAClBsK,EAAWnI,KAAKoI,GAEdA,EAAQnN,QAAQ4C,OAAS,GAC3BoK,EAAcG,EAAQnN,QAASkN,EAEjC,CAAC,+BACD,OAAOA,CACR,CAEmBF,CAAcnM,IAE3BuM,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,eAACvN,GAAA,EAAiB,CAAC5K,UAAU,iBACrC,IAAK,OACJ,OAAO,eAACoY,GAAA,EAAgB,CAACpY,UAAU,gBACpC,IAAK,aACJ,OAAO,eAACqY,GAAA,EAAiB,CAACrY,UAAU,iBACrC,IAAK,QACJ,OAAO,eAAC0L,GAAA,EAAgB,CAAC1L,UAAU,iBACpC,QACC,OAAO,KAEV,EAmEesY,GA7CK,SAAAzY,GACnB,IAAQ0Y,EAAkC1Y,EAAlC0Y,OAAQC,EAA0B3Y,EAA1B2Y,MAAOtH,EAAmBrR,EAAnBqR,SAAUK,EAAS1R,EAAT0R,KACjC,EAA0BwC,mBAAS,IAAG,oBAA/BzE,EAAK,KAAEmJ,EAAQ,KACtB,EAA8B1E,mBAAS,IAAG,oBAAnC2E,EAAO,KAAEC,EAAU,KACpBC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,eAAC,KAAY,CACZC,IAAKJ,EACL5Y,UAAS,2BAAsBkR,EAAU,YAAc,GAAE,YAAa,UAATK,EAAmB,QAAU,IAC1F0H,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,GAED,EAsBCW,SApBe,SAAAzJ,GAChB+I,EAAS/I,GACTiJ,EAAYjJ,EApCamI,GAAWjG,KAAI,SAACpC,GAC1C,IAAM2I,EAAW3I,EAAKhF,IAAI2D,MAAM,KAAK,GACrC,MAAO,CACNmB,MAAOE,EAAK/E,KACZ2O,MACC,eAAC,KAAI,CAACjH,GAAI3C,EAAK/E,KAAK,SACnB,uBAAKzK,UAAU,mBAAkB,UAChC,sBAAKA,UAAU,OAAM,SACnBkY,GAAgBC,KAElB,iCACC,sBAAKnY,UAAU,uBAAsB,SAAC,eAAC,GAAW,CAACuQ,GAAIf,EAAK9E,UAC5D,uBAAK1K,UAAU,0BAAyB,UAAEmY,EAAQ,eAMxD,IAkB2B,GAC1B,EAkBE7I,MAAOA,EACP+J,aAAc,SAACC,EAAYC,GAAM,OACkC,IAAlEA,EAAOjK,MAAMpD,cAAcgC,QAAQoL,EAAWpN,cAAqB,EACnE,SAED,eAAC,KAAK,CAACsN,YAAY,YAAaC,OAAQ,eAACC,GAAA,EAAc,CAAC1Z,UAAU,YAGrE,EC7EeuS,gBALS,SAAH,GAEnB,MAAO,CAAErQ,eAFqB,EAAL0C,MACjB1C,eAEV,GAEwC,CAAC,EAA1BqQ,EArBU,SAAC1S,GACzB,IAAQ0Y,EAAkC1Y,EAAlC0Y,OAAQC,EAA0B3Y,EAA1B2Y,MAAOtW,EAAmBrC,EAAnBqC,eACjBqP,EAAOJ,GAAM0B,iBAAiB3Q,GAEpC,OACC,uBAAKlC,UAAS,qBAAgBuY,EAAS,oBAAsB,GAAE,YAAIhH,GAAQ9R,MAAO,CAAC4S,gBAAiBnQ,GAAgB,UACnH,sBAAKlC,UAAU,kCAAiC,SAC/C,eAAC,GAAW,CAACwY,MAAOA,EAAOD,OAAQA,MAEpC,sBAAKvY,UAAU,YAAYkS,QAASsG,EAAM,SACzC,eAACmB,GAAA,EAAa,QAIlB,ICXQC,GAAWnH,KAAXmH,OA2EOrH,gBALS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAEjD,aADmEiD,EAApEjD,aACeI,QADqD6C,EAAtD7C,QACUG,eAD4C0C,EAA7C1C,eACiBC,UAD4ByC,EAA7BzC,UACYC,aADiBwC,EAAlBxC,aAE5D,GAEwC,CAAC0N,sBAAoBC,sBAA9CwC,EAzEU,SAAA1S,GACvB,IAAQ8B,EAAoH9B,EAApH8B,aAAcQ,EAAsGtC,EAAtGsC,UAAWJ,EAA2FlC,EAA3FkC,QAASG,EAAkFrC,EAAlFqC,eAAgB4N,EAAkEjQ,EAAlEiQ,mBAAoBC,EAA8ClQ,EAA9CkQ,kBAAmBmB,EAA2BrR,EAA3BqR,SAAU9O,EAAiBvC,EAAjBuC,aAC3G,EAAwC2R,oBAAS,GAAM,oBAAhD8F,EAAY,KAAEC,EAAe,KAE9BC,EAAgB,WACpBD,GAAgB,EAClB,EAUM/G,EAAWhR,IAAYwB,KAOvByW,EALA9X,EAGGiP,GAAM0B,iBAAiB3Q,GAFrBiP,GAAM0B,iBAAkC,SAAjBzQ,EAA0B,SAAW,WAsBvE,OANAiS,qBAAU,WACJnD,GACF6I,GAEJ,IAGE,eAACH,GAAM,CAAC5Z,UAAS,qBAAgBga,GAAWva,MAAO,CAAC4S,gBAAiBnQ,GAAgB,SACnF,uBAAKlC,UAAS,6BAAwB+S,EAAW,iBAAmB,IAAK,UACvE,eAAC,GAAI,CAACG,SAAU8G,IAChB,uBAAKha,UAAU,MAAMP,MAAO,CAACiT,MAAM,eAAD,OApBnCK,GAAY7B,EACN,MAGD,GAAN,OADCvP,EACS0B,KAEAD,KAFwB,MAgBgC,MAAK,UACnE,sBAAKpD,UAAU,WAAU,SACvB,qBAAIA,UAAU,6CAA4C,SAEtD+S,IAAa7B,EACb,KAEA,qBAAIlR,UAAU,yCAAyCkS,QAAS,WA3CxEhB,EAGFnB,GAAmB5N,GAFnB2N,GAAoBnO,EA0CuE,EAAE,SAChFA,GAAgBuP,EAAW,eAAC+I,GAAA,EAAkB,CAACja,UAAU,aAAgB,eAACka,GAAA,EAAgB,CAACla,UAAU,mBAK9G,sBAAKA,UAAU,YAAW,SACxB,eAAC,GAAQ,MAEX,eAAC,GAAS,CAACuY,OAAQsB,EAAcrB,MAAOuB,WAKlD,I,UCzEII,GAAiB,CACpB,OAAS,eAAC,GAAW,CAAC5J,GAAG,UAG1B5E,GAAiBkD,SAAQ,SAACgC,EAAK9B,GAC9B,IAAMqL,EAAmB,SAACC,GAAG,OAAKF,GAAeE,EAAI5P,MAAQ,eAAC,GAAW,CAAC8F,GAAI8J,EAAI3P,OAAU,EAC5F0P,EAAiBvJ,GACbA,EAAI/F,SACP+F,EAAI/F,QAAQ+D,SAAS,SAAAgC,GACpBuJ,EAAiBvJ,GACdA,EAAI/F,SACN+F,EAAI/F,QAAQ+D,SAAS,SAAAgC,GACpBuJ,EAAiBvJ,EAClB,GAEF,GAEF,IAEA,IAAMyJ,GAAkBC,cAAW,SAAA1a,GAClC,IACM2a,EADe3a,EAAb4a,SACsBC,SAASvM,MAAM,KAAKoB,QAAO,SAAAR,GAAC,OAAIA,CAAC,IACzD4L,EAAkBH,EAAa5I,KAAI,SAACgJ,EAAGhK,GAC1C,IAAMiK,EAAG,WAAOL,EAAaM,MAAM,EAAGlK,EAAQ,GAAG5B,KAAK,MACtD,OACE,eAAC,KAAWiD,KAAI,UACd,eAAC,KAAI,CAACE,GAAI0I,EAAI,SAAEV,GAAeU,MADXA,EAI3B,IAEC,OACA,eAAC,KAAU,UACTF,GAGJ,IAEaI,GAAa,qHAKxB,OALwB,oCACzB,WACC,OACC,eAACT,GAAe,GAElB,KAAC,EALwB,CAAShQ,aAQpByQ,MClCAC,GAdW,SAAH,GAA4B,IAAtBtQ,EAAK,EAALA,MAC5B,OAD0C,EAAPuQ,QAGjC,uBAAKjb,UAAU,kBAAiB,UAC/B,qBAAIA,UAAU,iCAAgC,SAC7C,eAAC,GAAW,CAACuQ,GAAI7F,GAAe,WAEjC,eAAC,GAAa,OAGd,IAEJ,ECbe,SAASwQ,KACvB,OACC,yBAAQlb,UAAU,SAAQ,SACzB,iEAA6B,IAAImb,MAAOC,eAAa,IAAI,uBAAMpb,UAAU,uBAAsB,mBAAKqB,OAAkB,4BAGzH,CCJO,IAAMga,GAAW,WACtB,OACE,eAAC,WAAQ,CAACC,SAAU,eAAC1b,GAAA,EAAO,CAACG,MAAM,YAAY,SAC7C,gBAAC,KAAM,WACL,eAAC,KAAK,CAAC0K,KAAI,UAAKjJ,IAAe,SAAS+Z,UAAWC,gBAAK,kBAAM,8BAAgB,MAC9E,eAAC,KAAK,CAAC/Q,KAAI,UAAKjJ,IAAe,yBAAyB+Z,UAAWC,gBAAK,kBAAM,6BAAqB,MACnG,eAAC,KAAK,CAAC/Q,KAAI,UAAKjJ,IAAe,YAAY+Z,UAAWC,gBAAK,kBAAM,2DAAmB,MACpF,eAAC,KAAQ,CAACC,KAAI,UAAKja,KAAmB2Q,GAAE,UAAK3Q,IAAe,eAIpE,EAEe4I,OAAMsR,KAAKL,ICMlBM,GAAYlJ,KAAZkJ,QACAzL,GAAkBC,KAAlBD,cAEK0L,GAAY,SAAH,GAA6C,IAAvCja,EAAY,EAAZA,aAAcI,EAAO,EAAPA,QAAS0Y,EAAQ,EAARA,SAC3CoB,EAAmB1K,GAAM5E,aAAaZ,GAAkB8O,EAASC,UAEjExJ,GADUC,GAAMC,cAAclB,MACVmB,SAAS,MAC7ByK,EAAY/Z,IAAYC,KACxB+Q,EAAWhR,IAAYwB,KAU7B,MAAe,YAFIiT,8BAAXuF,OAGC,eAACnc,GAAA,EAAO,CAACG,MAAM,SAItB,gBAAC,KAAM,WACL,eAAC,GAAS,CAACmR,SAAUA,IACnB6B,IAAa7B,EAAY,eAAC,GAAM,CAACH,UAAW8K,IAAsB,KACpE,gBAAC,KAAM,CAAC7b,UAAU,gBAAe,UAC7B8b,IAAc5K,EAAY,eAAC,GAAO,CAACH,UAAW8K,IAAsB,KACtE,gBAAC,KAAM,CAAC7b,UAAU,aAAaP,MAAO,CAACuc,YAlBxCjJ,GAAY7B,EACN,EAEFvP,EAAe0B,KAA2BD,MAe0B,UACrE,uBAAKpD,UAAS,sBAAiB+S,EAAW,iBAAmB,IAAK,UAChE,eAAC,GAAU,CAACkI,QAAyB,OAAhBY,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBhR,WAAYH,MAAuB,OAAhBmR,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBnR,QAC5E,eAACiR,GAAO,UACN,eAAC,GAAQ,SAGb,eAACT,GAAM,UAGVhK,GAAY,eAAC,GAAS,MAG7B,EAOeqB,gBALS,SAAH,GAAmB,IAAb3N,EAAK,EAALA,MAEzB,MAAO,CAAEjD,aADkCiD,EAAnCjD,aACeI,QADoB6C,EAArB7C,QACUD,OADW8C,EAAZ9C,OAEjC,GAEeyQ,CAAyBnI,IAAMsR,KAAKE,KCjDpCP,GAlBS,WACtB,OACE,eAAC,WAAQ,CAACC,SAAU,eAAC1b,GAAA,EAAO,CAACG,MAAM,SAAS,SAC1C,gBAAC,KAAM,WACL,eAAC,KAAK,CAAC0K,KAAI,UAAKhJ,IAAgB,UAAU8Z,UAAWC,gBAAK,kBAAM,iEAAgC,MAChG,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,YAAY8Z,UAAWC,gBAAK,kBAAM,kEAAkC,MACpG,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,YAAY8Z,UAAWC,gBAAK,kBAAM,2DAAkC,MACpG,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,eAAe8Z,UAAWC,gBAAK,kBAAM,kEAAqC,MAC1G,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,eAAe8Z,UAAWC,gBAAK,kBAAM,2DAAqC,MAC1G,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,oBAAoB8Z,UAAWC,gBAAK,kBAAM,2DAA0C,MACpH,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,YAAY8Z,UAAWC,gBAAK,kBAAM,6BAA+B,MACjG,eAAC,KAAK,CAAC/Q,KAAI,UAAKhJ,IAAgB,YAAY8Z,UAAWC,gBAAK,kBAAM,8BAA+B,MACjG,eAAC,KAAQ,CAACC,KAAI,UAAKha,KAAoB0Q,GAAE,UAAK1Q,IAAgB,gBAItE,ECNewa,GAXW,WACzB,OACC,sBAAKjc,UAAU,iBAAgB,SAC9B,eAAC,KAAM,UACN,eAAC,KAAK,CAACyK,KAAK,GAAG8Q,UAAWW,QAI9B,E,oBCFeC,GAPA,CACbC,KAAMC,KACNva,OAAQ,QACRwa,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACN3a,OAAQ,KACRwa,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACN9a,OAAQ,QACRwa,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACNxb,OAAQ,QACRwa,SAAS,eACJiB,M,mBCiCQhD,gBAAWhI,aANF,SAAH,GAAyB,IAAnB3N,EAAK,EAALA,MAAOZ,EAAI,EAAJA,KAGhC,MAAO,CAAElC,OAFW8C,EAAZ9C,OAES+B,MADCG,EAAVH,MAEV,GAE0B0O,EA9BL,SAAC1S,GACpB,IAAQiC,EAAqBjC,EAArBiC,OAAQ2Y,EAAa5a,EAAb4a,SACV+C,EAAmBV,GAAUhb,GACnC,OACE,eAAC,KAAY,CACXA,OAAQ0b,EAAiB1b,OACzBwa,SAAUkB,EAAiBlB,SAAS,SACpC,eAAC,KAAc,CAACxa,OAAQ0b,EAAiBpB,KAAK,SAC5C,gBAAC,KAAM,WACL,eAAC,KAAK,CAACqB,OAAK,EAAChT,KAAK,aAAY,SAC5B,eAAC,KAAQ,CAAC0H,GAAI3Q,QAEhB,eAAC,KAAK,CAACiJ,KAAMhJ,IAAiB,SAC5B,eAAC,GAAU,MAEb,eAAC,KAAK,CAACgJ,KAAMjJ,IAAgB,SAC3B,eAAC,GAAS,CAACiZ,SAAUA,YAMjC,KCvBM/D,GAAS,CACbgH,KAAK,GAAD,OAAKC,aAAsB,uBAC/BC,MAAM,GAAD,OAAKD,aAAsB,yBAmBnBE,OAhBf,WACE,OACE,sBAAK7d,UAAU,MAAK,SAClB,eAAC,IAAQ,CAACuJ,MAAOA,GAAM,SACrB,eAAC,yBAAqB,CAACuU,SAAUpH,GAAQqH,aAAcrc,IAAaU,aAAc4b,eAAe,yBAAwB,SACvH,eAAC,KAAM,UACL,eAAC,KAAM,UACL,eAAC,KAAK,CAACvT,KAAK,IAAI8Q,UAAW0C,cAOzC,EChBoBC,QACW,cAA7BxU,OAAO+Q,SAAS0D,UAEe,UAA7BzU,OAAO+Q,SAAS0D,UAEhBzU,OAAO+Q,SAAS0D,SAASpS,MACvB,2D,OCZNqS,IAASC,OAAO,eAAC,GAAG,IAAKC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9X,MAAK,SAAA+X,GACjCA,EAAaC,YACf,G,kCEpIJ,4RAuBa1W,EAAgB,SAACrE,GAC5B,MAAO,CACLzD,KAAMkC,IACNuB,QAEJ,EAQayE,EAAiB,WAC5B,MAAO,CACLlI,KAAMoC,IAEV,EASa+F,EAAgB,SAAC1E,GAC5B,MAAO,CACLzD,KAAMsC,IACNmB,QAEJ,EAQa2E,EAAgC,SAAC3E,GAC5C,MAAO,CACLzD,KAAM4C,IACNa,QAEJ,EAQa4E,EAAkC,SAAC5E,GAC9C,MAAO,CACLzD,KAAM8C,IACNW,QAEJ,EAEakE,EAAkB,SAACrE,GAC9B,MAAO,CACLtD,KAAMuC,IACNe,UAEJ,EAEamb,EAAkB,WAC7B,MAAO,CACLze,KAAMwC,IAEV,EAEakc,EAAc,WACzB,MAAO,CACL1e,KAAMyC,IAEV,C,kCCnGA,wIAAO,IAAMxC,EAAsB,sBACtBG,EAAsB,sBACtBI,EAAsB,sBACtBE,EAAc,a","file":"static/js/main.e80feaeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import {\r\n    FETCH_USERS_FAILURE,\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS} from \"../constants/Fetch\";\r\n\r\n\r\n\r\n\r\nexport function fetchUsersRequest() {\r\n    return {\r\n        type : FETCH_USERS_REQUEST,\r\n    }\r\n}\r\n\r\nexport function fetchUsersSuccess(users) {\r\n    return {\r\n        type : FETCH_USERS_SUCCESS,\r\n        payload : users\r\n    }\r\n}\r\n\r\nexport function fetchUsersFailure(error) {\r\n    return {\r\n        type : FETCH_USERS_FAILURE,\r\n        payload : error\r\n    }\r\n}\r\n\r\nexport function fetchUsers() {\r\n    return {\r\n        type : FETCH_USERS,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\r\n    FETCH_USERS_FAILURE,\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS}\r\n    from \"../constants/Fetch\";\r\n\r\n\r\nconst initState = {\r\n    loading: false,\r\n    users: [],\r\n    error: '',\r\n}\r\n\r\nfunction fetchReducer(state= initState,action) {\r\n    switch (action.type) {\r\n        case FETCH_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case FETCH_USERS_SUCCESS:\r\n            return {\r\n                users: action.payload,\r\n                loading: false,\r\n                error: '',\r\n            }\r\n        case FETCH_USERS_FAILURE:\r\n            return {\r\n                error: action.payload,\r\n                loading: false,\r\n                users: [],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default fetchReducer","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport fetchReducer from \"./Fetch\";\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    fetch:fetchReducer,\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import {FETCH_USERS} from \"../constants/Fetch\";\r\nimport axios from \"axios\";\r\nimport {fetchUsersFailure, fetchUsersRequest, fetchUsersSuccess} from \"../actions/Fetch\";\r\nimport {  takeEvery, put,  call } from 'redux-saga/effects';\r\n\r\nconst fetchUsersApi  = async  () =>  await axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => res.data).catch(err => err)\r\n\r\n\r\nfunction* fetchUsers() {\r\n    try {\r\n        yield put(fetchUsersRequest())\r\n        const users = yield call(fetchUsersApi)\r\n        if (users) {\r\n            yield put(fetchUsersSuccess(users))\r\n        }\r\n    }catch (error) {\r\n        yield put(fetchUsersFailure(error))\r\n    }\r\n}\r\n\r\nexport default function* fetchUsersWatcher() {\r\n    yield takeEvery(FETCH_USERS,fetchUsers)\r\n}","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\nimport Fetch from './Fetch';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n    Fetch()\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined,\r\n  ShoppingCartOutlined,\r\n  ShoppingOutlined,\r\n  UserOutlined,\r\n  PictureOutlined,\r\n  GiftOutlined,\r\n  ShopOutlined,\r\n  TeamOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n  MobileOutlined,\r\n  FileTextOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'home',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'Основные',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'dashboard',\r\n      path: `${APP_PREFIX_PATH}/home/dashboard`,\r\n      title: 'Дашборд',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'catalog',\r\n      path: `${APP_PREFIX_PATH}/catalog`,\r\n      title: 'Каталог',\r\n      icon: ShoppingCartOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n        {\r\n          key: 'products',\r\n          path: `${APP_PREFIX_PATH}/catalog/products`,\r\n          title: 'Товары',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'categories',\r\n          path: `${APP_PREFIX_PATH}/catalog/categories`,\r\n          title: 'Категории',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'collection',\r\n          path: `${APP_PREFIX_PATH}/catalog/collection`,\r\n          title: 'Коллекции',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'combo',\r\n          path: `${APP_PREFIX_PATH}/catalog/combo`,\r\n          title: 'Комбо',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: 'orders',\r\n      path: `${APP_PREFIX_PATH}/orders`,\r\n      title: 'Заказы',\r\n      icon: ShoppingOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'clients',\r\n      path: `${APP_PREFIX_PATH}/clients`,\r\n      title: 'Клиенты',\r\n      icon: UserOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n        {\r\n          key: 'clients.list',\r\n          path: `${APP_PREFIX_PATH}/clients/clients-list`,\r\n          title: 'Список клиентов',\r\n          breadcrumb: false,\r\n          submenu: [\r\n\r\n          ]\r\n        },\r\n        {\r\n          key: 'clients.group',\r\n          path: `${APP_PREFIX_PATH}/clients/clients-group`,\r\n          title: 'Группы клиентов',\r\n          breadcrumb: false,\r\n          submenu: [\r\n\r\n          ]\r\n        },\r\n\r\n      ]\r\n    },\r\n    {\r\n      key: 'banners',\r\n      path: `${APP_PREFIX_PATH}/banners`,\r\n      title: 'Баннеры',\r\n      icon: PictureOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'promo',\r\n      path: `${APP_PREFIX_PATH}/promo`,\r\n      title: 'Промокоды',\r\n      icon: GiftOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'offline',\r\n      path: `${APP_PREFIX_PATH}/offline-points`,\r\n      title: 'Оффлайн-точки',\r\n      icon: ShopOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n        {\r\n          key: 'offline.address',\r\n          path: `${APP_PREFIX_PATH}/home/offline-points/address`,\r\n          title: 'Адреса',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'geo.zone',\r\n          path: `${APP_PREFIX_PATH}/home/offline-points/geo-zone`,\r\n          title: 'Гео-зоны',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      key: 'staff',\r\n      path: `${APP_PREFIX_PATH}/staff`,\r\n      title: 'Сотрудники',\r\n      icon: TeamOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'mail',\r\n      path: `${APP_PREFIX_PATH}/mail`,\r\n      title: 'Рассылки',\r\n      icon: MailOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n\r\n  ]\r\n\r\n}]\r\n\r\nconst systemNavTree = [{\r\n  key: 'system',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'Системные',\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'settings',\r\n      path: `${APP_PREFIX_PATH}/settings`,\r\n      title: 'Настройки',\r\n      icon: SettingOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'mobile.app',\r\n      path: `${APP_PREFIX_PATH}/mobile-app`,\r\n      title: 'Мобильное приложение',\r\n      icon: MobileOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'logs',\r\n      path: `${APP_PREFIX_PATH}/logs`,\r\n      title: 'Логи',\r\n      icon: FileTextOutlined ,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n\r\n\r\n\r\n  ]\r\n\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  ...systemNavTree,\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/clients/clients-list`} component={lazy(() => import(`./user-list`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/profile`} component={lazy(() => import(`./profile`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/test-task\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\r\nexport const FETCH_USERS = 'FETCH_USERS';"],"sourceRoot":""}